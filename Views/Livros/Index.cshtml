@using SistemaBiblioteca.Utils
@model PaginatedList<SistemaBiblioteca.Models.Livro>
@{
    ViewData["Title"] = "Catálogo de Livros";
}

<style>
    /* Estilos Gerais */
    .container-fluid {
        padding: 20px;
    }

    /* Cabeçalho */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }

    .page-title {
        color: #2c3e50;
        font-size: 1.8rem;
        font-weight: 600;
    }

        .page-title i {
            margin-right: 10px;
            color: #3498db;
        }

    /* Card Principal */
    .main-card {
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 30px;
    }

    .card-header {
        background-color: #f8f9fa;
        padding: 15px 20px;
        border-bottom: 1px solid #e0e0e0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-title {
        font-size: 1.2rem;
        font-weight: 500;
        margin: 0;
    }

        .card-title i {
            margin-right: 8px;
            color: #7f8c8d;
        }

    /* Tabela */
    .table-container {
        overflow-x: auto;
        padding: 0 15px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin: 15px 0;
    }

    th {
        background-color: #f1f5f9;
        color: #2c3e50;
        font-weight: 600;
        padding: 12px 15px;
        text-align: left;
        border-bottom: 2px solid #e0e0e0;
    }

    td {
        padding: 12px 15px;
        border-bottom: 1px solid #e0e0e0;
        vertical-align: middle;
    }

    tr:hover {
        background-color: #f8f9fa;
    }

    /* Badges */
    .badge {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 0.85rem;
        font-weight: 600;
        color: white;
    }

    .available {
        background-color: #28a745;
    }

    .unavailable {
        background-color: #dc3545;
    }

    /* Botões */
    .btn-group {
        display: flex;
        gap: 5px;
    }

    .btn {
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 0.9rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

        .btn i {
            margin-right: 5px;
        }

    .btn-outline-info {
        color: #17a2b8;
        border-color: #17a2b8;
    }

    .btn-outline-primary {
        color: #007bff;
        border-color: #007bff;
    }

    .btn-outline-danger {
        color: #dc3545;
        border-color: #dc3545;
    }

    /* Paginação */
    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .page-item {
        margin: 0 3px;
    }

    .page-link {
        padding: 6px 12px;
        border-radius: 4px;
        color: #3498db;
        border: 1px solid #dee2e6;
    }

    .page-item.active .page-link {
        background-color: #3498db;
        border-color: #3498db;
        color: white;
    }

    .page-item.disabled .page-link {
        color: #6c757d;
    }

    /* Formulário de Busca */
    .search-form {
        display: flex;
        max-width: 400px;
    }

    .search-input {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    .search-btn {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }
</style>

<div class="container-fluid">
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas fa-book"></i> @ViewData["Title"]
        </h1>

        @if (User.IsInRole("Administrador"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Novo Livro
            </a>
        }
    </div>

    <div class="main-card">
        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-list"></i> Lista de Livros
            </h5>

            <form asp-action="Index" method="get" class="search-form">
                <input type="text" name="searchString" class="form-control search-input"
                       placeholder="Pesquisar..." value="@ViewData["CurrentFilter"]">
                <button type="submit" class="btn btn-primary search-btn">
                    <i class="fas fa-search"></i>
                </button>
            </form>
        </div>

        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>Título</th>
                        <th>Autor</th>
                        <th>Editora</th>
                        <th>Ano</th>
                        <th>ISBN</th>
                        <th>Disponível</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Titulo)</td>
                            <td>@Html.DisplayFor(modelItem => item.Autor)</td>
                            <td>@Html.DisplayFor(modelItem => item.Editora)</td>
                            <td>@Html.DisplayFor(modelItem => item.AnoPublicacao)</td>
                            <td>@Html.DisplayFor(modelItem => item.ISBN)</td>
                            <td>
                                <span class="badge @(item.QuantidadeDisponivel > 0 ? "available" : "unavailable")">
                                    @Html.DisplayFor(modelItem => item.QuantidadeDisponivel)
                                </span>
                            </td>
                            <td>
                                <div class="btn-group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info" title="Detalhes">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    @if (User.IsInRole("Administrador") || User.IsInRole("Bibliotecario"))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary" title="Editar">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    }
                                    @if (User.IsInRole("Administrador"))
                                    {
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger" title="Excluir">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Paginação -->
        <nav class="pagination">
            <ul style="display: flex; list-style: none; padding: 0;">
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        Anterior
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index"
                           asp-route-pageNumber="@i"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            @i
                        </a>
                    </li>
                }
                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        Próxima
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <script>
        // Fecha automaticamente alerts após 5 segundos
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                alert.style.display = 'none';
            });
        }, 5000);
    </script>
}